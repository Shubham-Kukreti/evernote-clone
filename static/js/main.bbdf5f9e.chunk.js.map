{"version":3,"sources":["components/layout/Navbar.js","customhook/useInput.js","components/home/Form.js","store/action/noteAction.js","components/notes/Note.js","components/notes/NotesList.js","components/home/Home.js","components/notes/Favorites.js","components/notes/NoteDetail.js","components/notes/EditForm.js","App.js","reportWebVitals.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["Navbar","className","to","id","useInput","initialValue","useState","value","setValue","reset","bind","onChange","e","target","Form","title","bindTitle","resetTitle","content","bindContent","resetContent","dispatch","useDispatch","onSubmit","note","preventDefault","getState","getFirestore","collection","add","favorite","createdAt","Date","then","console","log","catch","err","type","htmlFor","Note","heartMarkup","style","cursor","onClick","favStatus","doc","update","toggleFav","delete","deleteNote","moment","toDate","fromNow","payload","NotesList","notes","map","Home","useFirestoreConnect","orderBy","useSelector","state","firestore","ordered","Favorites","where","storeAs","favnotes","NoteDetail","props","match","params","data","isLoaded","isEmpty","calendar","EditForm","history","useHistory","updateNote","push","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","note_to_edit","noteReducer","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbconfig","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbdf5f9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom'\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = \"green\">\r\n            <div className=\"nav-wrapper\">\r\n            <Link to=\"/\" className=\"brand-logo\">Notebook</Link>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><NavLink to=\"/favorites\">Favorites</NavLink></li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import {useState} from 'react';\r\n\r\nconst useInput = (initialValue = '')=>{\r\n    const [value, setValue] = useState(initialValue)\r\n\r\n    const reset = ()=>{\r\n        setValue(initialValue)\r\n    }\r\n\r\n    const bind = {\r\n        value,\r\n        onChange: (e)=>{\r\n            setValue(e.target.value)\r\n        }\r\n    }\r\n\r\n    return [value, bind, reset]\r\n}\r\n\r\nexport default useInput;","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport useInput from '../../customhook/useInput'\r\nimport { addNote } from '../../store/action/noteAction'\r\nimport { useDispatch } from 'react-redux'\r\nconst Form = () => {\r\n    const [title, bindTitle, resetTitle] = useInput(\"\")\r\n    const [content, bindContent, resetContent] = useInput(\"\")\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(addNote({title,content}))\r\n        console.log({title,content})\r\n        resetTitle()\r\n        resetContent()\r\n    }\r\n    return (\r\n        <div className=\"section \">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3 center\">New Note</h5>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"note_title\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                        <label htmlFor=\"note_title\">Note Title</label>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"note_content\" className=\"materialize-textarea\" {...bindContent}></textarea>\r\n                        <label htmlFor=\"note_content\">Note Content</label>\r\n                    </div>\r\n                    <button className=\"btn green\">ADD</button>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","export const addNote = (note)=>{\r\n    return (dispatch, getState, {getFirestore})=>{\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes')\r\n        .add({\r\n            ...note,\r\n            favorite:false,\r\n            createdAt: new Date()\r\n\r\n        })\r\n        .then(()=>{\r\n            console.log('add the note successfully')\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteNote = (note)=>{\r\n    return (dispatch, getState, {getFirestore})=>{\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).delete()\r\n        .then(()=>{\r\n            console.log('delete the note successfully')\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\nexport const toggleFav = (note)=>{\r\n    return (dispatch, getState, {getFirestore})=>{\r\n        const favStatus = !note.favorite\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).update({\r\n            favorite:favStatus\r\n        })\r\n        .then(()=>{\r\n            console.log('toggle favorite success')\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateNote = (note)=>{\r\n    return (dispatch, getState, {getFirestore})=>{\r\n        const firestore = getFirestore()\r\n        firestore.collection('notes').doc(note.id).update({\r\n            title:note.title,\r\n            content:note.content\r\n        })\r\n        .then(()=>{\r\n            console.log('update the note succesfully')\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {deleteNote, toggleFav} from '../../store/action/noteAction'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst Note = ({note}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const deleteNoteHandler = ()=>{\r\n        dispatch(deleteNote(note));\r\n    }\r\n    const toggleFavorite = ()=>{\r\n        dispatch(toggleFav(note));\r\n    }\r\n\r\n    const editNoteHandler = ()=>{\r\n        dispatch({type:'EDIT_NOTE',payload:note})\r\n    }\r\n\r\n    const heartMarkup = note.favorite ? 'favorite' : 'favorite_border'\r\n    return (\r\n        <div className=\"note white\">\r\n            <div className=\"right-align\">\r\n                <i className=\"material-icons red-text \" style={{cursor:'pointer'}} onClick={toggleFavorite}>{heartMarkup}</i>\r\n                <i className=\"material-icons \" style={{cursor:'pointer'}} onClick={deleteNoteHandler}>delete</i>\r\n            </div>\r\n            <Link to={\"/note/\" + note.id}>\r\n            <h5 className=\"black-text\">{note.title}</h5>\r\n            </Link>\r\n            <p className=\"truncate\">{note.content}</p>\r\n            <p className=\"grey-text\">{moment(note.createdAt.toDate()).fromNow()}</p>\r\n            <div className=\"right-align\">\r\n                <Link to={`/editform/${note.id}`}>\r\n                    <i className=\"material-icons black-text\"\r\n                    onClick={editNoteHandler}>edit</i>    \r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note'\r\n\r\nconst NotesList = ({notes}) => {\r\n    \r\n    // const notesData = Array.from(notes)\r\n\r\n    return (\r\n        <div className=\"noteslist\">\r\n            {notes && notes.map(note => <Note note={note} key={note.id} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesList;","import React from 'react';\r\nimport Form from './Form'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport NotesList from '../../components/notes/NotesList'\r\nconst Home = () => {\r\n    useFirestoreConnect([{collection:'notes',orderBy:['createdAt','desc']}])\r\n    const notes = useSelector((state)=>state.firestore.ordered.notes)\r\n    console.log(notes)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row center-align\">\r\n                <div className=\"col s7\"><Form /></div>\r\n                <div className=\"col s5\"><NotesList notes={notes} /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {useFirestoreConnect} from 'react-redux-firebase'\r\nimport NotesList from '../notes/NotesList'\r\nconst Favorites = () => {\r\n    useFirestoreConnect([{collection:'notes', where:['favorite','==',true],\r\n    orderBy:['createdAt','desc'],storeAs:'favnotes'}])\r\n    const favnotes = useSelector(state => state.firestore.ordered.favnotes)\r\n    console.log(favnotes)\r\n    return (\r\n        <div>\r\n           \r\n           <NotesList notes={favnotes} /> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Favorites;","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {useFirestoreConnect, isLoaded, isEmpty} from 'react-redux-firebase'\r\nimport moment from 'moment'\r\n\r\nconst NoteDetail = (props) => {\r\n    const id = props.match.params.id\r\n    useFirestoreConnect([{collection:'notes', doc:id}])\r\n    const note = useSelector(({firestore:{data}})=>data.notes && data.notes[id])\r\n    const noteMarkup = !isLoaded(note)?(\r\n        <div className=\"container section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                    <span className=\"card-title\">Loading...</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>\r\n                        {moment(note?.createdAt.toDate()).calendar()}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    ):isEmpty(note)?(\r\n        <div className=\"container section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                    <span className=\"card-title\">The note content is empty</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    \r\n                </div>\r\n            </div> \r\n        </div>\r\n    ):(\r\n        <div className=\"container section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                    <span className=\"card-title\">{note.title}</span>\r\n                    <p>{note.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>\r\n                        {moment(note.createdAt.toDate()).calendar()}\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n    return noteMarkup\r\n};\r\n\r\nexport default NoteDetail;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport useInput from '../../customhook/useInput'\r\nimport {updateNote} from '../../store/action/noteAction'\r\nimport {useHistory} from 'react-router-dom'\r\nconst EditForm = () => {\r\n    const note = useSelector((state) => state.note)\r\n    console.log('edit form', note)\r\n    const [title, bindTitle, resetTitle] = useInput(note.title)\r\n    const [content, bindContent, resetContent] = useInput(note.content)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateNote({id : note.id,title,content}))\r\n        resetTitle()\r\n        resetContent()\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"section \">\r\n            <form onSubmit={handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3 center\">New Note</h5>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"note_title\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                        <label className=\"active\" htmlFor=\"note_title\">Note Title</label>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"note_content\" className=\"materialize-textarea\" {...bindContent}></textarea>\r\n                        <label htmlFor=\"note_content\" className=\"active\">Note Content</label>\r\n                    </div>\r\n                    <button className=\"btn green\">Update</button>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditForm;","/* eslint-disable no-unused-vars */\nimport React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/home/Home'\nimport Favorites from './components/notes/Favorites'\nimport NoteDetail from './components/notes/NoteDetail'\nimport EditForm from './components/notes/EditForm'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/favorites' component={Favorites} />\n        <Route path='/note/:id' component={NoteDetail} />\n        <Route path='/editform/:id' component={EditForm} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    note_to_edit :{}\r\n}\r\n\r\nconst noteReducer =  (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n\r\n    case 'EDIT_NOTE':\r\n        return payload;\r\n\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default noteReducer\r\n","import {combineReducers} from 'redux'\r\nimport {\r\n    firebaseReducer\r\n  } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport noteReducer from './noteReducer'\r\nconst rootReducer = combineReducers({\r\n  note: noteReducer,  \r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer // <- needed if using firestore\r\n  })\r\n\r\n  export default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD1nGnHPVaK2sqsgyUybi4zvYkXwnXfCf8\",\r\n    authDomain: \"evernote-clone-2bd9a.firebaseapp.com\",\r\n    projectId: \"evernote-clone-2bd9a\",\r\n    storageBucket: \"evernote-clone-2bd9a.appspot.com\",\r\n    messagingSenderId: \"903088454552\",\r\n    appId: \"1:903088454552:web:3f657ccb75c5f44455c9ed\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase\r\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport firebase from 'firebase/app'\nimport thunk from 'redux-thunk'\nimport fbconfig from './config/fbconfig'\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase\n} from 'react-redux-firebase'\n\nimport { createFirestoreInstance, getFirestore,reduxFirestore } from 'redux-firestore'\nconst store = createStore(rootReducer, compose(\n\napplyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n\nreduxFirestore(fbconfig)\n),\n)\n\nconst rrfProps = {\n  firebase,\n  config: fbconfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}